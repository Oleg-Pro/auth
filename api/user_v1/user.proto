syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";

option go_package="github.com/Oleg-Pro/auth/pkg/user_v1;user_v1";

service UserV1 {
    rpc Create (CreateRequest) returns (CreateResponse){
        option (google.api.http) = {
          post: "/user/v1/create"
          body: "*"
        };
    }

    rpc Get (GetRequest) returns (GetResponse){
        option (google.api.http) = {
          get: "/user/v1"
        };
    }

    rpc Update(UpdateRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
          patch: "/user/v1"
          body: "*"
        };
    }

    rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
          delete: "/note/v1"
        };
    }   
}

enum Role {
    UNKNOWN = 0;
    USER = 1;
    ADMIN = 2;
}

message CreateRequest {
    string name = 1 [(validate.rules).string = {min_len: 1, max_len: 50}];
    string email = 2 [(validate.rules).string.email = true];
    string pasword = 3 [(validate.rules).string = {min_len: 6, max_len: 50}];
    string password_confirm = 4 [(validate.rules).string = {min_len: 6, max_len: 50}];
    Role role = 5;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
    int64 id = 1;    
}

message GetResponse {
    int64 id = 1;
    string name = 2;
    string email = 3;
    Role role = 4;    
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;    
}    

message UpdateRequest {
    int64 id = 1;
    google.protobuf.StringValue name = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
    google.protobuf.StringValue email = 3 [(validate.rules).string.email = true];
    Role role = 4;
}

message DeleteRequest {
    int64 id = 1;
}
